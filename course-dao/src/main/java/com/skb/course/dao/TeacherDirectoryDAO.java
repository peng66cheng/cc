package com.skb.course.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;
import org.mybatis.spring.annotation.MapperScan;

import com.skb.course.domain.TeacherDirectoryDO;
import com.skb.util.sort.Sortable;

@MapperScan
public interface TeacherDirectoryDAO {
	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table teacher_directory
	 *
	 * @mbggenerated
	 */
	int deleteByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table teacher_directory
	 *
	 * @mbggenerated
	 */
	int insert(TeacherDirectoryDO record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table teacher_directory
	 *
	 * @mbggenerated
	 */
	int insertSelective(TeacherDirectoryDO record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table teacher_directory
	 *
	 * @mbggenerated
	 */
	TeacherDirectoryDO selectByPrimaryKey(Integer id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table teacher_directory
	 *
	 * @mbggenerated
	 */
	int updateByPrimaryKeySelective(TeacherDirectoryDO record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table teacher_directory
	 *
	 * @mbggenerated
	 */
	int updateByPrimaryKey(TeacherDirectoryDO record);

	/**
	 * 查询老师目录
	 * 
	 * @param teacherId
	 * @param type
	 * @return
	 */
	List<TeacherDirectoryDO> selectTeacherDirectory(@Param("teacherId") Integer teacherId, @Param("type") Byte type, @Param("permission") Byte permission);

	/**
	 * 获取两个目录区间的目录列表(包含边界)
	 * 
	 * @param teacherId
	 * @param type
	 * @param startOrder
	 *            靠前的顺序， 包含边界
	 * @param endOrder
	 *            靠后的顺序，包含边界
	 * @return
	 */
	List<TeacherDirectoryDO> getBetweenDir(@Param("teacherId") Integer teacherId, @Param("type") Byte type,
			@Param("startOrder") Integer startOrder, @Param("endOrder") Integer endOrder);

	/**
	 * 批量修改目录顺序
	 * 
	 * @param directories
	 * @return
	 */
	int batchModifyDirOrder(List<Sortable> directories);
}