<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.skb.course.dao.SyncCourseDAO" >
  <resultMap id="BaseResultMap" type="com.skb.course.domain.SyncCourseDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="directory_id" property="directoryId" jdbcType="INTEGER" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="publish_count" property="publishCount" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="modify_user" property="modifyUser" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, course_id, directory_id, author, publish_count, code, status, modify_user, create_time, 
    modify_time
  </sql>
  <select id="selectOneByCourseId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sync_course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sync_course set status = 0 
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.skb.course.domain.SyncCourseDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sync_course (course_id, directory_id, 
      author, publish_count, code, 
      status, modify_user, create_time, 
      modify_time)
    values (#{courseId,jdbcType=INTEGER}, #{directoryId,jdbcType=INTEGER}, 
      #{author,jdbcType=VARCHAR}, #{publishCount,jdbcType=INTEGER}, #{code,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{modifyUser,jdbcType=INTEGER}, now(),now())
  </insert>
  <insert id="insertSelective" parameterType="com.skb.course.domain.SyncCourseDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sync_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="directoryId != null" >
        directory_id,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="code != null" >
        code,
      </if>
        status,
        create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="directoryId != null" >
        #{directoryId,jdbcType=INTEGER},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=INTEGER},
      </if>
     	1,
      now()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.skb.course.domain.SyncCourseDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sync_course
    <set >
      <if test="directoryId != null" >
        directory_id = #{directoryId,jdbcType=INTEGER},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="publishCount != null" >
        publish_count = #{publishCount,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="modifyUser != null" >
        modify_user = #{modifyUser,jdbcType=INTEGER},
      </if>
      <if test="modifyTime != null" >
        modify_time = now()
      </if>
    </set>
    where course_id = #{courseId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skb.course.domain.SyncCourseDO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sync_course
    set course_id = #{courseId,jdbcType=INTEGER},
      directory_id = #{directoryId,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      publish_count = #{publishCount,jdbcType=INTEGER},
      code = #{code,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      modify_user = #{modifyUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 获取同步课程数量 -->
  <select id="queryForListNum" resultType="java.lang.Integer" parameterType="map" >
    select count(id)  from sync_course
    where status = 1
    and	 directory_id in 
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		#{item}  
	</foreach> 
  </select>
  
  <!-- 获取同步课程列表 -->
  <select id="queryForList" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from sync_course
    where status = 1
    and	 directory_id in 
    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
		#{item}  
	</foreach> 
    order by directory_id,code limit #{beginIndex},#{pageSize}
  </select>
   
   <!-- 同步课程转载数＋1 -->
   <update id="updateSyncCoursePublishCount" parameterType="Integer" >
    update sync_course
    set  publish_count = (publish_count+1) 
    where course_id = #{coureseId}
  </update>
  
  <!-- 获取文件夹下的最大排序号 -->
  <select id="queryMaxCodeForDirectory" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select ifnull(max(code),0)  from sync_course
    where status = 1
    and	 directory_id =  #{directoryId}
  </select>
  
</mapper>